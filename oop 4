import java.util.InputMismatchException;
import java.util.Scanner;

class ATM {
    private double balance;

    // Constructor to initialize balance
    public ATM(double initialBalance) {
        this.balance = initialBalance;
    }

    // Check balance
    public void checkBalance() {
        System.out.println("üí∞ Your current balance is: ‚Çπ" + balance);
    }

    // Deposit money
    public void deposit(double amount) {
        if (amount <= 0) {
            throw new IllegalArgumentException("Deposit amount must be greater than zero.");
        }
        balance += amount;
        System.out.println("‚úÖ ‚Çπ" + amount + " deposited successfully.");
    }

    // Withdraw money
    public void withdraw(double amount) {
        if (amount <= 0) {
            throw new IllegalArgumentException("Withdrawal amount must be greater than zero.");
        }
        if (amount > balance) {
            throw new ArithmeticException("‚ùå Insufficient funds for this withdrawal.");
        }
        balance -= amount;
        System.out.println("‚úÖ ‚Çπ" + amount + " withdrawn successfully.");
    }
}

public class ATMSimulation {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ATM atm = new ATM(5000.00); // initial balance

        boolean continueRunning = true;

        System.out.println("===== WELCOME TO JAVA BANK ATM =====");

        while (continueRunning) {
            try {
                // Display menu
                System.out.println("\n1. Check Balance");
                System.out.println("2. Deposit Money");
                System.out.println("3. Withdraw Money");
                System.out.println("4. Exit");
                System.out.print("Enter your choice: ");

                int choice = sc.nextInt();

                switch (choice) {
                    case 1:
                        atm.checkBalance();
                        break;

                    case 2:
                        System.out.print("Enter amount to deposit: ‚Çπ");
                        double depositAmount = sc.nextDouble();
                        atm.deposit(depositAmount);
                        break;

                    case 3:
                        System.out.print("Enter amount to withdraw: ‚Çπ");
                        double withdrawAmount = sc.nextDouble();
                        atm.withdraw(withdrawAmount);
                        break;

                    case 4:
                        System.out.println("Thank you for using the ATM. Goodbye!");
                        continueRunning = false;
                        break;

                    default:
                        System.out.println("‚ö†Ô∏è Invalid choice. Please enter 1‚Äì4.");
                }

            } catch (InputMismatchException e) {
                System.out.println("‚ö†Ô∏è Invalid input! Please enter numbers only.");
                sc.nextLine(); // clear invalid input

            } catch (IllegalArgumentException e) {
                System.out.println("‚ö†Ô∏è Error: " + e.getMessage());

            } catch (ArithmeticException e) {
                System.out.println("‚ö†Ô∏è Error: " + e.getMessage());

            } finally {
                // Always executes
                System.out.println("‚û°Ô∏è Transaction complete.\n");
            }
        }

        sc.close();
    }
}
